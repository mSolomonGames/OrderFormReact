{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\Crisp Fibre Documents\\\\OrderForm\\\\src\\\\components\\\\IndivFibrePackages.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Paper, List, ListItem, ListItemText, Grid, makeStyles, Typography } from '@material-ui/core';\nimport { AppContext } from '../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(0)\n  },\n  packageContainer: {\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(2)\n  },\n  gridHeading: {\n    background: theme.palette.primary.main\n  },\n  mainHeading: {\n    background: theme.palette.primary.main,\n    padding: theme.spacing(1)\n  },\n  listOptions: {\n    padding: 0\n  }\n}));\nexport default (() => {\n  const [state, setState] = useContext(AppContext);\n  const classes = useStyles();\n  const packages = [{\n    \"name\": \"mb Uncapped\",\n    \"speed\": 10,\n    \"price\": 599\n  }, {\n    \"name\": \"mb Uncapped\",\n    \"speed\": 20,\n    \"price\": 799\n  }, {\n    \"name\": \"mb Uncapped\",\n    \"speed\": 40,\n    \"price\": 999\n  }, {\n    \"name\": \"mb Uncapped\",\n    \"speed\": 100,\n    \"price\": 1299\n  }];\n  const installation = [{\n    \"name\": \"Installation with Modem\",\n    \"period\": \"Month to Month\",\n    \"price\": 2000\n  }, {\n    \"name\": \"Installation with Modem\",\n    \"period\": \"12 Months\",\n    \"price\": 1000\n  }, {\n    \"name\": \"Installation Only\",\n    \"period\": \"24 Months\",\n    \"price\": 0\n  }];\n  const [fibre_package_index, setFibrePackageIndex] = useState(1);\n  const [fibre_package_install_index, setFibrePackageInstallIndex] = useState(1); // const handleFibreItemClick = (event, index) => {\n  //     setFibrePackageIndex(index);\n  // };\n  // const handleInstallItemClick = (event, index) => {\n  //     setFibrePackageInstallIndex(index);\n  //     };\n\n  useEffect(() => {\n    setState(state => ({ ...state,\n      fibre_package: fibre_package_index\n    }));\n    setState(state => ({ ...state,\n      fibre_package_install: fibre_package_install_index\n    }));\n  }, [fibre_package_index]);\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.mainHeading,\n    color: \"textSecondary\",\n    align: \"center\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Fibre Packages\"), React.createElement(List, {\n    className: classes.listOptions,\n    component: \"nav\",\n    \"aria-label\": \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, packages.map((p, i) => React.createElement(ListItem, {\n    button: true,\n    selected: fibre_package_index === i,\n    onClick: e => setFibrePackageIndex(i),\n    value: fibre_package_index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(Typography, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, p.speed, \" \", p.name, \" , R\", p.price),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.gridHeading,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Installation Package\")), React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Time Period\")), React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"h5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Pricing\")))));\n});","map":{"version":3,"sources":["C:/Users/Michael/Documents/Crisp Fibre Documents/OrderForm/src/components/IndivFibrePackages.js"],"names":["React","useState","useContext","useEffect","Paper","List","ListItem","ListItemText","Grid","makeStyles","Typography","AppContext","useStyles","theme","root","marginBottom","spacing","padding","packageContainer","gridHeading","background","palette","primary","main","mainHeading","listOptions","state","setState","classes","packages","installation","fibre_package_index","setFibrePackageIndex","fibre_package_install_index","setFibrePackageInstallIndex","fibre_package","fibre_package_install","map","p","i","e","speed","name","price"],"mappings":"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","sourcesContent":["import React, {useState,useContext, useEffect} from 'react';\r\nimport { Paper,List,ListItem,ListItemText, Grid,makeStyles , Typography} from '@material-ui/core';\r\nimport { AppContext } from '../context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(0),\r\n        \r\n    },\r\n    packageContainer: {\r\n        marginBottom: theme.spacing(4),\r\n        padding: theme.spacing(2)\r\n    },\r\n    gridHeading:{\r\n        background: theme.palette.primary.main,\r\n    },\r\n    mainHeading: {\r\n        background: theme.palette.primary.main,\r\n        padding: theme.spacing(1),\r\n    },\r\n    listOptions:{\r\n        padding: 0,\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default () => {\r\n    const [state, setState ] = useContext(AppContext);\r\n\r\n    const classes = useStyles();\r\n    const packages = [\r\n        {\"name\": \"mb Uncapped\",\r\n        \"speed\": 10,\r\n        \"price\": 599},\r\n        {\"name\": \"mb Uncapped\",\r\n        \"speed\": 20,\r\n        \"price\": 799},\r\n        {\"name\": \"mb Uncapped\",\r\n        \"speed\": 40,\r\n        \"price\": 999},\r\n        {\"name\": \"mb Uncapped\",\r\n        \"speed\": 100,\r\n        \"price\": 1299},\r\n    ];\r\n    const installation= [\r\n        {\"name\": \"Installation with Modem\",\r\n        \"period\": \"Month to Month\",\r\n        \"price\": 2000},\r\n        {\"name\": \"Installation with Modem\",\r\n        \"period\": \"12 Months\",\r\n        \"price\": 1000},\r\n        {\"name\": \"Installation Only\",\r\n        \"period\": \"24 Months\",\r\n        \"price\": 0},\r\n    ];\r\n    const [fibre_package_index, setFibrePackageIndex] = useState(1);\r\n    const [fibre_package_install_index, setFibrePackageInstallIndex] = useState(1);\r\n\r\n    // const handleFibreItemClick = (event, index) => {\r\n    //     setFibrePackageIndex(index);\r\n    // };\r\n\r\n    // const handleInstallItemClick = (event, index) => {\r\n    //     setFibrePackageInstallIndex(index);\r\n    //     };\r\n\r\n    useEffect(() => {        \r\n        setState(state => ({ ...state, fibre_package:  fibre_package_index}));      \r\n        setState(state => ({ ...state, fibre_package_install:  fibre_package_install_index}));\r\n        }, [fibre_package_index],\r\n        \r\n        );\r\n\r\n    return (        \r\n        <Grid container className={classes.root} justify=\"center\" alignItems=\"center\">\r\n            \r\n            <Grid item md={12} xs={12}>\r\n                <Typography className={classes.mainHeading} color=\"textSecondary\" align=\"center\" variant=\"h4\">Fibre Packages</Typography>\r\n                <List className={classes.listOptions} component=\"nav\" aria-label=\"\">\r\n                    {packages.map((p, i) => (\r\n                         <ListItem                         \r\n                         button\r\n                         selected={fibre_package_index === i}\r\n                         onClick={e => setFibrePackageIndex(i)}\r\n                            value={fibre_package_index}\r\n                         >\r\n                         <ListItemText primary={<Typography align=\"center\" >{p.speed} {p.name} , R{p.price}</Typography>}/>\r\n                         </ListItem>\r\n\r\n                    ))}\r\n                </List>\r\n                               \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container className={classes.gridHeading} justify=\"center\"> \r\n                        <Grid item md={4} xs={4}>\r\n                            <Typography color=\"textSecondary\" variant=\"h5\" align=\"center\" >Installation Package</Typography>\r\n                        </Grid>\r\n                        <Grid item md={4} xs={4}>\r\n                            <Typography color=\"textSecondary\" variant=\"h5\" align=\"center\" >Time Period</Typography>\r\n                        </Grid>\r\n                        <Grid item md={4} xs={4}>\r\n                            <Typography color=\"textSecondary\" variant=\"h5\" align=\"center\" >Pricing</Typography>\r\n                        </Grid>\r\n                        \r\n                </Grid>\r\n                {/* <Grid container justify=\"center\">\r\n                <Grid item md={12} xs={12}>\r\n                        <List className={classes.listOptions} component=\"nav\" aria-label=\"secondary mailbox folder\">\r\n                    {installation.map((p, i) => (\r\n                         <ListItem\r\n                         button\r\n                         value={fibre_package_install_index}\r\n                         selected={fibre_package_install_index === i}\r\n                         onClick={e => setFibrePackageInstallIndex(e.target.i)}\r\n                         >\r\n                         <ListItemText primary= {\r\n                            <Grid container>\r\n                                <Grid item md={4} xs={4}>\r\n                                    <Typography align=\"center\" >{p.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item md={4} xs={4}>\r\n                                    <Typography align=\"center\" >{p.period}</Typography>\r\n                                </Grid>\r\n                                <Grid item md={4} xs={4}>\r\n                                    <Typography align=\"center\" >R{p.price}</Typography>\r\n                                </Grid>\r\n                            </Grid> }/>\r\n                         </ListItem>\r\n                            ))}\r\n                        </List>\r\n\r\n                        </Grid>\r\n                </Grid> */}\r\n            </Grid>\r\n            \r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}