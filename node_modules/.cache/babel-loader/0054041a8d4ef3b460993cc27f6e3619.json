{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\Crisp Fibre Documents\\\\OrderForm\\\\src\\\\components\\\\DebitBankForm.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, TextField, makeStyles, InputLabel, Typography } from '@material-ui/core';\nimport { AppContext } from '../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0),\n    paddingLeft: theme.spacing(0),\n    marginBottom: theme.spacing(4) //paddingTop: theme.spacing(0),\n    //padding: `0 ${theme.spacing(4)}px ${theme.spacing(4)}px ${theme.spacing(4)}px`,\n\n  },\n  label: {\n    marginBottom: theme.spacing(1),\n    color: 'black' //marginLeft: theme.spacing(14),\n\n  },\n  textField: {\n    margin: \"0 40px 0 0\",\n    width: \"400px\"\n  },\n  inputGroup: {\n    marginTop: theme.spacing(2)\n  },\n  leftAlign: {//background: \"#000\",\n    //alignSelf: \"flex-start\",\n  },\n  headingBanner: {\n    background: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    color: 'white'\n  }\n}));\nexport default (() => {\n  const classes = useStyles();\n  const [state, setState] = useContext(AppContext);\n  const [branch, setBranch] = useState('');\n  const [branchCode, setBranchCode] = useState('');\n  const [accountName, setAccountName] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [accountType, setAccountType] = useState('');\n  useEffect(() => {\n    setState(state => ({ ...state,\n      branch: branch\n    }));\n    setState(state => ({ ...state,\n      branchCode: branchCode\n    }));\n    setState(state => ({ ...state,\n      accountName: accountName\n    }));\n    setState(state => ({ ...state,\n      accountType: accountType\n    }));\n    setState(state => ({ ...state,\n      accountNumber: accountNumber\n    }));\n  }, [branch, branchCode, accountName, accountNumber, accountType]);\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    className: classes.headingBanner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Bank Details\")), React.createElement(Grid, {\n    item: true,\n    md: 10,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"branchLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Branch\"), React.createElement(TextField, {\n    onChange: e => setBranch(e.target.value),\n    value: branch,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"branchCodeLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Branch Code\"), React.createElement(TextField, {\n    onChange: e => setBranchCode(e.target.value),\n    value: branchCode,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"accountNameLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Account Name\"), React.createElement(TextField, {\n    onChange: e => setAccountName(e.target.value),\n    value: accountName,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"accountNumberLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Account Number\"), React.createElement(TextField, {\n    onChange: e => setAccountNumber(e.target.value),\n    value: accountNumber,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"accountTypeLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Account Type\"), React.createElement(TextField, {\n    onChange: e => setAccountType(e.target.value),\n    value: accountType,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))));\n});","map":{"version":3,"sources":["C:/Users/Michael/Documents/Crisp Fibre Documents/OrderForm/src/components/DebitBankForm.js"],"names":["React","useContext","useEffect","useState","Grid","TextField","makeStyles","InputLabel","Typography","AppContext","useStyles","theme","root","padding","spacing","paddingLeft","marginBottom","label","color","textField","margin","width","inputGroup","marginTop","leftAlign","headingBanner","background","palette","primary","main","classes","state","setState","branch","setBranch","branchCode","setBranchCode","accountName","setAccountName","accountNumber","setAccountNumber","accountType","setAccountType","e","target","value"],"mappings":"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","sourcesContent":["import React,{useContext, useEffect, useState}from 'react';\r\nimport { Grid, TextField, makeStyles, InputLabel, Typography } from '@material-ui/core';\r\nimport { AppContext } from '../context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        \r\n        padding: theme.spacing(0),\r\n        paddingLeft: theme.spacing(0),\r\n        marginBottom: theme.spacing(4),\r\n        //paddingTop: theme.spacing(0),\r\n        //padding: `0 ${theme.spacing(4)}px ${theme.spacing(4)}px ${theme.spacing(4)}px`,\r\n    },\r\n    label: {\r\n        marginBottom: theme.spacing(1),\r\n        color: 'black',\r\n        //marginLeft: theme.spacing(14),\r\n    },\r\n    textField: {\r\n        margin: \"0 40px 0 0\",\r\n        width: \"400px\",\r\n        \r\n    },\r\n    inputGroup: {\r\n        marginTop: theme.spacing(2),\r\n        \r\n    },\r\n    leftAlign:{\r\n        //background: \"#000\",\r\n        //alignSelf: \"flex-start\",\r\n    },\r\n    headingBanner: {\r\n        background: theme.palette.primary.main,\r\n        padding: theme.spacing(1),\r\n        color: 'white'\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const [state, setState ] = useContext(AppContext);\r\n\r\n    const [branch,setBranch] = useState('');\r\n    const [branchCode,setBranchCode] = useState('');\r\n    const [accountName,setAccountName] = useState('');\r\n    const [accountNumber,setAccountNumber] = useState('');\r\n    const [accountType,setAccountType] = useState('');\r\n    \r\n    \r\n\r\n    useEffect(() => {        \r\n        setState(state => ({ ...state, branch:  branch}));\r\n        setState(state => ({...state, branchCode: branchCode}));\r\n        setState(state => ({...state, accountName: accountName}));\r\n        setState(state => ({...state, accountType: accountType}));\r\n        setState(state => ({...state, accountNumber: accountNumber}));\r\n        \r\n      }, [branch, branchCode, accountName, accountNumber,accountType],\r\n        \r\n      );\r\n\r\n    return (\r\n        <Grid container className={classes.root} alignItems=\"center\" justify=\"center\">\r\n            \r\n\r\n            <Grid item md={12} xs={12} className={classes.headingBanner}>\r\n                <Typography align=\"center\" variant=\"h4\">Bank Details</Typography>\r\n            </Grid>\r\n            <Grid item md={10} xs={10}>\r\n                <Grid container justify=\"flex-start\">\r\n                    <Grid item md={6} xs={10} className={classes.inputGroup}>\r\n                    <InputLabel  id=\"branchLabel\"  className={classes.label}>Branch</InputLabel>\r\n                    <TextField onChange={e => setBranch(e.target.value)}  value={branch} className={classes.textField}  />\r\n                </Grid>\r\n                <Grid item md={6} xs={10} className={classes.inputGroup}>\r\n                    <InputLabel id=\"branchCodeLabel\"  className={classes.label}>Branch Code</InputLabel>\r\n                    <TextField onChange={e => setBranchCode(e.target.value)}  value={branchCode} className={classes.textField} />\r\n                </Grid>\r\n                <Grid item md={6} xs={10} className={classes.inputGroup}>\r\n                    <InputLabel id=\"accountNameLabel\"className={classes.label}>Account Name</InputLabel>\r\n                    <TextField onChange={e => setAccountName(e.target.value)}  value={accountName} className={classes.textField} />\r\n                </Grid>\r\n                <Grid item md={6} xs={10} className={classes.inputGroup}>\r\n                    <InputLabel id=\"accountNumberLabel\" className={classes.label}>Account Number</InputLabel>\r\n                    <TextField onChange={e => setAccountNumber(e.target.value)}  value={accountNumber} className={classes.textField} />\r\n                </Grid>\r\n                <Grid item  md={6} xs={10}className={classes.inputGroup} >\r\n                    <InputLabel id=\"accountTypeLabel\"  className={classes.label}>Account Type</InputLabel>\r\n                    <TextField onChange={e => setAccountType(e.target.value)}  value={accountType}  className={classes.textField} />\r\n                </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}