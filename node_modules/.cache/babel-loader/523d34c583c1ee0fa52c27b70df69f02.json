{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\Crisp Fibre Documents\\\\OrderForm\\\\src\\\\components\\\\DebitBankForm.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, TextField, makeStyles, InputLabel, Typography } from '@material-ui/core';\nimport { AppContext } from '../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0),\n    paddingLeft: theme.spacing(0),\n    marginBottom: theme.spacing(4) //paddingTop: theme.spacing(0),\n    //padding: `0 ${theme.spacing(4)}px ${theme.spacing(4)}px ${theme.spacing(4)}px`,\n\n  },\n  label: {\n    marginBottom: theme.spacing(1),\n    color: 'black' //marginLeft: theme.spacing(14),\n\n  },\n  textField: {\n    margin: \"0 40px 0 0\",\n    width: \"400px\"\n  },\n  inputGroup: {\n    marginTop: theme.spacing(2)\n  },\n  leftAlign: {//background: \"#000\",\n    //alignSelf: \"flex-start\",\n  },\n  headingBanner: {\n    background: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    color: 'white'\n  }\n}));\nexport default (() => {\n  const classes = useStyles();\n  const [state, setState] = useContext(AppContext);\n  const [fullName, setFullName] = useState('');\n  const [id_num, setIdNum] = useState('');\n  const [tel_num, setTelNum] = useState('');\n  const [cell_num, setCellNum] = useState('');\n  const [street_addr, setStreetAddr] = useState('');\n  const [city, setCity] = useState('');\n  const [post_code, setPostCode] = useState('');\n  const [email, setEmail] = useState('');\n  const [refered_by, setReferedBy] = useState('');\n  useEffect(() => {\n    setState(state => ({ ...state,\n      fullName: fullName\n    }));\n    setState(state => ({ ...state,\n      ID_num: id_num\n    }));\n    setState(state => ({ ...state,\n      tel_num: tel_num\n    }));\n    setState(state => ({ ...state,\n      cell_num: tel_num\n    }));\n    setState(state => ({ ...state,\n      street_addr: street_addr\n    }));\n    setState(state => ({ ...state,\n      city: city\n    }));\n    setState(state => ({ ...state,\n      post_code: post_code\n    }));\n    setState(state => ({ ...state,\n      email: email\n    }));\n    setState(state => ({ ...state,\n      refered_by: refered_by\n    }));\n  }, [fullName, id_num, tel_num, cell_num, street_addr, city, post_code, email, refered_by]);\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    justify: \"space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    className: classes.headingBanner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Bank Details\")), React.createElement(Grid, {\n    item: true,\n    md: 5,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"branchLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Branch\"), React.createElement(TextField, {\n    onChange: e => setFullName(e.target.value),\n    value: fullName,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 5,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"branchCodeLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Branch Code\"), React.createElement(TextField, {\n    onChange: e => setIdNum(e.target.value),\n    value: id_num,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 5,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"accountNameLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Account Name\"), React.createElement(TextField, {\n    onChange: e => setTelNum(e.target.value),\n    value: tel_num,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 5,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"accountNumberLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Account Number\"), React.createElement(TextField, {\n    onChange: e => setCellNum(e.target.value),\n    value: cell_num,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 5,\n    xs: 10,\n    className: classes.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"accountTypeLabel\",\n    className: classes.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Account Type\"), React.createElement(TextField, {\n    onChange: e => setStreetAddr(e.target.value),\n    value: street_addr,\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["C:/Users/Michael/Documents/Crisp Fibre Documents/OrderForm/src/components/DebitBankForm.js"],"names":["React","useContext","useEffect","useState","Grid","TextField","makeStyles","InputLabel","Typography","AppContext","useStyles","theme","root","padding","spacing","paddingLeft","marginBottom","label","color","textField","margin","width","inputGroup","marginTop","leftAlign","headingBanner","background","palette","primary","main","classes","state","setState","fullName","setFullName","id_num","setIdNum","tel_num","setTelNum","cell_num","setCellNum","street_addr","setStreetAddr","city","setCity","post_code","setPostCode","email","setEmail","refered_by","setReferedBy","ID_num","e","target","value"],"mappings":"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","sourcesContent":["import React,{useContext, useEffect, useState}from 'react';\r\nimport { Grid, TextField, makeStyles, InputLabel, Typography } from '@material-ui/core';\r\nimport { AppContext } from '../context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(0),\r\n        paddingLeft: theme.spacing(0),\r\n        marginBottom: theme.spacing(4),\r\n        //paddingTop: theme.spacing(0),\r\n        //padding: `0 ${theme.spacing(4)}px ${theme.spacing(4)}px ${theme.spacing(4)}px`,\r\n    },\r\n    label: {\r\n        marginBottom: theme.spacing(1),\r\n        color: 'black',\r\n        //marginLeft: theme.spacing(14),\r\n    },\r\n    textField: {\r\n        margin: \"0 40px 0 0\",\r\n        width: \"400px\",\r\n        \r\n    },\r\n    inputGroup: {\r\n        marginTop: theme.spacing(2),\r\n        \r\n    },\r\n    leftAlign:{\r\n        //background: \"#000\",\r\n        //alignSelf: \"flex-start\",\r\n    },\r\n    headingBanner: {\r\n        background: theme.palette.primary.main,\r\n        padding: theme.spacing(1),\r\n        color: 'white'\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const [state, setState ] = useContext(AppContext);\r\n\r\n    const [fullName,setFullName] = useState('');\r\n    const [id_num,setIdNum] = useState('');\r\n    const [tel_num,setTelNum] = useState('');\r\n    const [cell_num,setCellNum] = useState('');\r\n    const [street_addr,setStreetAddr] = useState('');\r\n    const [city,setCity] = useState('');\r\n    const [post_code,setPostCode] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [refered_by, setReferedBy] = useState('');\r\n    \r\n\r\n    useEffect(() => {        \r\n        setState(state => ({ ...state, fullName:  fullName}));\r\n        setState(state => ({...state, ID_num: id_num}));\r\n        setState(state => ({...state, tel_num: tel_num}));\r\n        setState(state => ({...state, cell_num: tel_num}));\r\n        setState(state => ({...state, street_addr: street_addr}));\r\n        setState(state => ({...state, city: city}));\r\n        setState(state => ({...state, post_code: post_code}));\r\n        setState(state => ({...state, email: email}));\r\n        setState(state => ({...state, refered_by: refered_by}));\r\n      }, [fullName, id_num, tel_num, cell_num, street_addr, city, post_code, email, refered_by ],\r\n        \r\n      );\r\n\r\n    return (\r\n        <Grid container className={classes.root} justify=\"space-around\">\r\n            <Grid item md={12} xs={12}className={classes.headingBanner}>\r\n                <Typography align=\"center\" variant=\"h4\">Bank Details</Typography>\r\n            </Grid>\r\n            <Grid item md={5} xs={10} className={classes.inputGroup}>\r\n                <InputLabel  id=\"branchLabel\"  className={classes.label}>Branch</InputLabel>\r\n                <TextField onChange={e => setFullName(e.target.value)}  value={fullName} className={classes.textField}  />\r\n            </Grid>\r\n            <Grid item md={5} xs={10} className={classes.inputGroup}>\r\n                <InputLabel id=\"branchCodeLabel\"  className={classes.label}>Branch Code</InputLabel>\r\n                <TextField onChange={e => setIdNum(e.target.value)}  value={id_num} className={classes.textField} />\r\n            </Grid>\r\n            <Grid item md={5} xs={10} className={classes.inputGroup}>\r\n                <InputLabel id=\"accountNameLabel\"className={classes.label}>Account Name</InputLabel>\r\n                <TextField onChange={e => setTelNum(e.target.value)}  value={tel_num} className={classes.textField} />\r\n            </Grid>\r\n            <Grid item md={5} xs={10} className={classes.inputGroup}>\r\n                <InputLabel id=\"accountNumberLabel\" className={classes.label}>Account Number</InputLabel>\r\n                <TextField onChange={e => setCellNum(e.target.value)}  value={cell_num} className={classes.textField} />\r\n            </Grid>\r\n            <Grid item md={5} xs={10}className={classes.inputGroup} >\r\n                <InputLabel id=\"accountTypeLabel\"  className={classes.label}>Account Type</InputLabel>\r\n                <TextField onChange={e => setStreetAddr(e.target.value)}  value={street_addr}  className={classes.textField} />\r\n            </Grid>\r\n            \r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}